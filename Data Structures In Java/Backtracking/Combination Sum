import java.util.*;

public class Solution {
    public static List<List<Integer>> combSum(int[] ARR, int B) {
        List<List<Integer>> result = new ArrayList<>();
        Arrays.sort(ARR);
        backtrack(result, new ArrayList<>(), ARR, B, 0);
        return result;
    }

    private static void backtrack(List<List<Integer>> result, List<Integer> tempList, int[] ARR, int remain, int start) {
        if (remain < 0) return;
        else if (remain == 0) result.add(new ArrayList<>(tempList));
        else {
            for (int i = start; i < ARR.length; i++) {
                tempList.add(ARR[i]);
                backtrack(result, tempList, ARR, remain - ARR[i], i); // not i + 1 because we can reuse same elements
                tempList.remove(tempList.size() - 1);
            }
        }
    }
}
